{
  "__internal": {
    "platform": {
      "name": "Platform",
      "description": {
        "Windows": "Config for Windows",
        "Linux": "Config for Linux",
        "Mac OS": "Config for Mac OS",
        "Plan9": "Config for Plan9"
      },
      "default": null,
      "values": ["Windows", "Linux", "Mac OS", "Plan9"]
    }
  },

  "application": {
    "section": "Application Options",
    "description": "Basic parameters regarding LND Application",

    "datadir": {
      "name": "Data Storage Location",
      "description": "The directory that lnd stores all wallet, chain, and channel related data within. Environment variables are expanded so they may be used. NOTE: Windows environment variables are typically %VARIABLE%, but they must be accessed with $VARIABLE here. Also, ~ is expanded to $LOCALAPPDATA on Windows.",
      "default": "$BASE/data"
    },
    "logdir": {
      "name": "Log directory",
      "description": "The directory that logs are stored in. The logs are auto-rotated by default. Rotated logs are compressed in place.",
      "default": "$BASE/logs"
    },
    "maxlogfiles": {
      "name": "Max log files",
      "description": "Number of logfiles that the log rotation should keep. Setting it to 0 disables deletion of old log files.",
      "default": 3
    },
    "maxlogfilesize": {
      "name": "Max log file size (in MB)",
      "description": "Max log file size in MB before it is rotated.",
      "default": 10
    },
    "acceptortimeout": {
      "name": "Acceptor timeout (in seconds)",
      "description": "Time after which an RPCAcceptor will time out and return false if it hasn't yet received a response.",
      "default": "15s"
    },

    "tlscertpath": {
      "name": "TLS Cert path",
      "description": "Path to TLS certificate for lnd's RPC and REST services.",
      "default": "$BASE/tls.cert"
    },
    "tlskeypath": {
      "name": "TLS Key path",
      "description": "Path to TLS private key for lnd's RPC and REST services.",
      "default": "$BASE/tls.key"
    },
    "tlsextraip": {
      "name": "TLS extra ip",
      "description": "Adds an extra ip to the generated certificate. Setting multiple tlsextraip= entries is allowed. (old tls files must be deleted if changed)",
      "default": ""
    },
    "tlsextradomain": {
      "name": "TLS extra domain",
      "description": "Adds an extra domain to the generate certificate. Setting multiple tlsextradomain= entries is allowed. (old tls files must be deleted if changed)",
      "default": ""
    },
    "tlsautorefresh": {
      "name": "TLS Auto refresh",
      "description": "If set, then all certs will automatically be refreshed if they're close to  expiring, or if any parameters related to extra IPs or domains in the cert change.",
      "default": 1
    },

    "tlscertduration": {
      "name": "TLS cert duration",
      "description": "The duration from generating the self signed certificate to the certificate expiry date. Valid time units are {s, m, h}. The below value is about 14 months (14 * 30 * 24 = 10080)",
      "default": "10080h"
    },
    "tlsdisableautofill": {
      "name": "TLS disable autofill",
      "description": "Do not include the interface IPs or the system hostname in TLS certificate, use first --tlsextradomain as Common Name instead, if set.",
      "default": true
    },
    "externalhosts": {
      "name": "External hosts",
      "description": "A list of domains for lnd to periodically resolve, and advertise the resolved IPs for the backing node. This is useful for users that only have a dynamic IP, or want to expose the node at a domain.",
      "default": "my-node-domain.com"
    },
    "letsencryptdir": {
      "name": "Lets Encrypt directory",
      "description": "Sets the directory to store Let's Encrypt certificates within",
      "default": "$BASE/letsencrypt"
    },
    "letsencryptlisten": {
      "name": "Lets Encrypt listen",
      "description": "The IP:port on which lnd will listen for Let's Encrypt challenges. Let's Encrypt will always try to contact on port 80. Often non-root processes are not allowed to bind to ports lower than 1024. This configuration option allows a different port to be used, but must be used in combination with port forwarding from port 80. This configuration can also be used to specify another IP address to listen on, for example an IPv6 address.",
      "default": "localhost:8080"
    },
    "letsencryptdomain": {
      "name": "Lets Encrypt domain",
      "description": "Request a Let's Encrypt certificate for this domain. Note that the certificate is only requested and stored when the first rpc connection comes in.",
      "default": "example.com"
    },

    "no-macaroons": {
      "name": "No macaroons",
      "description": "Disable macaroon authentication. Macaroons are used as bearer credentials to authenticate all RPC access. If one wishes to opt out of macaroons, uncomment the line below.",
      "default": 1
    },
    "sync-freelist": {
      "name": "Sync freelist",
      "description": "Enable free list syncing for the default bbolt database. This will decrease start up time, but can result in performance degradation for very large databases, and also result in higher memory usage. If 'free list corruption' is detected, then this flag may resolve things.",
      "default": true
    },
    "adminmacaroonpath": {
      "name": "Admin macaroon path",
      "description": "Path to write the admin macaroon for lnd's RPC and REST services if it doesn't exist. This can be set if one wishes to store the admin macaroon in a distinct location. By default, it is stored within lnd's network directory. Applications that are able to read this file, gain admin macaroon access.",
      "default": "$BASE/data/chain/bitcoin/simnet/admin.macaroon"
    },
    "readonlymacaroonpath": {
      "name": "Readonly macaroon path",
      "description": "Path to write the read-only macaroon for lnd's RPC and REST services if it doesn't exist. This can be set if one wishes to store the read-only macaroon in a distinct location. The read only macaroon allows users which can read the file to access RPCs which don't modify the state of the daemon. By default, it is stored within lnd's network directory.",
      "default": "$BASE/data/chain/bitcoin/simnet/readonly.macaroon"
    },
    "invoicemacaroonpath": {
      "name": "Invoice macaroon path",
      "description": "Path to write the invoice macaroon for lnd's RPC and REST services if it doesn't exist. This can be set if one wishes to store the invoice macaroon in a distinct location. By default, it is stored within lnd's network directory. The invoice macaroon allows users which can read the file to gain read and write access to all invoice related RPCs.",
      "default": "$BASE/data/chain/bitcoin/simnet/invoice.macaroon"
    },

    "coin-selection-strategy": {
      "name": "Coin selection strategy",
      "description": {
        "largest": "Select largest UTXOs",
        "random": "Select UTXOs randomly"
      },
      "default": "largest",
      "values": [
        "Largest [largest]",
        "Random [random]"
      ]
    },

    "payments-expiration-grace-period": {
      "name": "Payments expiration grace period",
      "description": "A period to wait before for closing channels with outgoing htlcs that have  timed out and are a result of this nodes instead payment. In addition to our  current block based deadline, if specified this grace period will also be taken into account. Valid time units are {s, m, h}.",
      "default": "30s"
    },
    "listen": {
      "name": "Listen",
      "description": "Specify the interfaces to listen on for p2p connections. One listen address per line. All ipv4 on port 9735: listen=0.0.0.0:9735. On all ipv4 interfaces on port 9735 and ipv6 localhost port 9736: listen=0.0.0.0:9735, listen=[::1]:9736",
      "default": "0.0.0.0:9735"
    },
    "nolisten": {
      "name": "No listen",
      "description": "Disable listening for incoming p2p connections. This will override all listeners.",
      "default": true
    },
    "rpclisten": {
      "name": "RPC listen",
      "description": "Specify the interfaces to listen on for gRPC connections. One listen address per line. Only ipv4 localhost on port 10009: rpclisten=localhost:10009. On ipv4 localhost port 10009 and ipv6 port 10010: rpclisten=localhost:10009 rpclisten=[::1]:10010. On an Unix socket: rpclisten=unix:///var/run/lnd/lnd-rpclistener.sock",
      "default": "localhost:10009"
    },
    "restlisten": {
      "name": "REST listen",
      "description": "Specify the interfaces to listen on for REST connections. One listen address per line. All ipv4 interfaces on port 8080: restlisten=0.0.0.0:8080. On ipv4 localhost port 80 and 443: restlisten=localhost:80, restlisten=localhost:443. On an Unix socket: restlisten=unix:///var/run/lnd-restlistener.sock",
      "default": "0.0.0.0:8080"
    },
    "restcors": {
      "name": "REST CORS",
      "description": "A series of domains to allow cross origin access from. This controls the CORs policy of the REST RPC proxy.",
      "default": "https://my-special-site.com"
    },
    "externalip": {
      "name": "External IP",
      "description": "Adding an external IP will advertise your node to the network. This signals that your node is available to accept incoming channels. If you don't wish to advertise your node, this value doesn't need to be set. Unless specified (with host:port notation), the default port (9735) will be added to the address.",
      "default": ""
    },
    "nat": {
      "name": "NAT",
      "description": "Instead of explicitly stating your external IP address, you can also enable UPnP or NAT-PMP support on the daemon. Both techniques will be tried and require proper hardware support. In order to detect this hardware support, `lnd` uses a dependency that retrieves the router's gateway address by using different built-in binaries in each platform. Therefore, it is possible that we are unable to detect the hardware and `lnd` will exit with an error indicating this. This option will automatically retrieve your external IP address, even after it has changed in the case of dynamic IPs, and advertise it to the network using the ports the daemon is listening on. This does not support devices behind multiple NATs.",
      "default": true
    },
    "norest": {
      "name": "No REST",
      "description": "norest",
      "default": true
    },
    "no-rest-tls": {
      "name": "no-rest-tls",
      "description": "Disable TLS for the REST API.",
      "default": true
    },

    "addpeer": {
      "name": "Add peers",
      "description": "Specify peer(s) to connect to first.",
      "default": ""
    },
    "ws-ping-interval": {
      "name": "WS ping interval",
      "description": "The ping interval for REST based WebSocket connections, set to 0 to disable sending ping messages from the server side. Valid time units are {s, m, h}.",
      "default": "30s"
    },
    "ws-pong-wait": {
      "name": "WS pong wait",
      "description": "The time we wait for a pong response message on REST based WebSocket connections before the connection is closed as inactive. Valid time units are {s, m, h}.",
      "default": "5s"
    },
    "minbackoff": {
      "name": "Min back off",
      "description": "Shortest backoff when reconnecting to persistent peers. Valid time units are {s, m, h}.",
      "default": "1s"
    },
    "maxbackoff": {
      "name": "Max back off",
      "description": "Longest backoff when reconnecting to persistent peers. Valid time units are {s, m, h}.",
      "default": "1h"
    },
    "connectiontimeout": {
      "name": "Connection timeout",
      "description": "The timeout value for network connections in seconds, default to 120 seconds. Valid uints are {ms, s, m, h}.",
      "default": "120s"
    },

    "debuglevel": {
      "name": "Debug level",
      "description": "Debug logging level. Valid levels are {trace, debug, info, warn, error, critical} You may also specify <global-level>,<subsystem>=<level>,<subsystem2>=<level>,...  to set log level for individual subsystems. Use lncli debuglevel --show to  list available subsystems.",
      "default": "debug,PEER=info"
    },
    "cpuprofile": {
      "name": "CPU profile",
      "description": "Write CPU profile to the specified file.",
      "default": ""
    },
    "profile": {
      "name": "Profile",
      "description": "Enable HTTP profiling on given port -- NOTE port must be between 1024 and 65536. The profile can be access at: http://localhost:<PORT>/debug/pprof/.",
      "default": ""
    },

    "unsafe-disconnect": {
      "name": "Unsafe disconnect",
      "description": "DEPRECATED: Allows the rpcserver to intentionally disconnect from peers with open channels. THIS FLAG WILL BE REMOVED IN 0.10.0.",
      "default": false
    },
    "unsafe-replay": {
      "name": "Unsafe replay",
      "description": "Causes a link to replay the adds on its commitment txn after starting up, this enables testing of the sphinx replay logic.",
      "default": true
    },
    "maxpendingchannels": {
      "name": "Max pending channels",
      "description": "The maximum number of incoming pending channels permitted per peer.",
      "default": 1
    },

    "backupfilepath": {
      "name": "Backup file path",
      "description": "The target location of the channel backup file.",
      "default": "$BASE/data/chain/bitcoin/simnet/channel.backup"
    },
    "blockcachesize": {
      "name": "Block cache size (in MB)",
      "description": "The maximum capacity of the block cache in bytes. Increasing this will result in more blocks being kept in memory but will increase performance when the same block is required multiple times. The example value below is 40 MB (1024 * 1024 * 40)",
      "default": 41943040
    },
    "feeurl": {
      "name": "Fee URL",
      "description": "Optional URL for external fee estimation. If no URL is specified, the method for fee estimation will depend on the chosen backend and network. Must be set for neutrino on mainnet.",
      "default": "https://nodes.lightning.computer/fees/v1/btc-fee-estimates.json"
    },
    "nobootstrap": {
      "name": "No bootstrap",
      "description": "If true, then automatic network bootstrapping will not be attempted. This means that your node won't attempt to automatically seek out peers on the network.",
      "default": true
    },
    "noseedbackup": {
      "name": "No seedbackup",
      "description": "If true, NO SEED WILL BE EXPOSED -- EVER, AND THE WALLET WILL BE ENCRYPTED USING THE DEFAULT PASSPHRASE. THIS FLAG IS ONLY FOR TESTING AND SHOULD NEVER BE USED ON MAINNET.",
      "default": true
    },
    "wallet-unlock-password-file": {
      "name": "Wallet unlock password file",
      "description": "The full path to a file (or pipe/device) that contains the password for unlocking the wallet; if set, no unlocking through RPC is possible and lnd will exit if no wallet exists or the password is incorrect; if wallet-unlock-allow-create is also set then lnd will ignore this flag if no wallet exists and allow a wallet to be created through RPC.",
      "default": "/tmp/example.password"
    },
    "wallet-unlock-allow-create": {
      "name": "Wallet unlock allow create",
      "description": "Don't fail with an error if wallet-unlock-password-file is set but no wallet exists yet. Not recommended for auto-provisioned or high-security systems because the wallet creation RPC is unauthenticated and an attacker could inject a seed while lnd is in that state.",
      "default": true
    },
    "reset-wallet-transactions": {
      "name": "Reset wallet transactions",
      "description": "Removes all transaction history from the on-chain wallet on startup, forcing a full chain rescan starting at the wallet's birthday. Implements the same functionality as btcwallet's dropwtxmgr command. Should be set to false after successful execution to avoid rescanning on every restart of lnd.",
      "default": true
    },

    "minchansize": {
      "name": "Min chan size",
      "description": "The smallest channel size (in satoshis) that we should accept. Incoming channels smaller than this will be rejected, default value 20000.",
      "default": 20000
    },
    "maxchansize": {
      "name": "Max chan size",
      "description": "The largest channel size (in satoshis) that we should accept. Incoming channels larger than this will be rejected. For non-Wumbo channels this  limit remains 16777215 satoshis by default as specified in BOLT-0002. For wumbo channels this limit is 1,000,000,000 satoshis (10 BTC). Set this config option explicitly to restrict your maximum channel size to better align with your risk tolerance",
      "default": 16777215
    },
    "coop-close-target-confs": {
      "name": "Coop close target confs",
      "description": "The target number of blocks in which a cooperative close initiated by a remote peer should be confirmed. This target is used to estimate the starting fee rate that will be used during fee negotiation with the peer. This target is is also used for cooperative closes initiated locally if the --conf_target for the channel closure is not set.",
      "default": 10
    },
    "channel-commit-interval": {
      "name": "Channel commit interval",
      "description": "The maximum time that is allowed to pass between receiving a channel state update and signing the next commitment. Setting this to a longer duration allows for more efficient channel operations at the cost of latency. This is capped at 1 hour. The default is 50 milliseconds.",
      "default": "1h"
    },
    "pending-commit-interval": {
      "name": "Pending commit interval",
      "description": "The maximum time that is allowed to pass while waiting for the remote party to revoke a locally initiated commitment state. Setting this to a longer duration if a slow response is expected from the remote party or large number of payments are attempted at the same time. (default: 1m0s)",
      "default": "5m"
    },
    "channel-commit-batch-size": {
      "name": "Channel commit batch size",
      "description": "The maximum number of channel state updates that is accumulated before signing a new commitment.",
      "default": 10
    },
    "keep-failed-payment-attempts": {
      "name": "Keep failed payment attempts",
      "description": "Keeps persistent record of all failed payment attempts for successfully settled payments.",
      "default": false
    },
    "default-remote-max-htlcs": {
      "name": "Default remote max htlcs",
      "description": "The default max_htlc applied when opening or accepting channels. This value limits the number of concurrent HTLCs that the remote party can add to the commitment. The maximum possible value is 483.",
      "default": 483
    },
    "chan-enable-timeout": {
      "name": "Chan enable timeout",
      "description": "The duration that a peer connection must be stable before attempting to send a channel update to re-enable or cancel a pending disables of the peer's channels on the network. (default: 19m0s)",
      "default": "22m"
    },
    "chan-disable-timeout": {
      "name": "Chan disable timeout",
      "description": "The duration that must elapse after first detecting that an already active  channel is actually inactive and sending channel update disabling it to the  network. The pending disable can be canceled if the peer reconnects and becomes stable for chan-enable-timeout before the disable update is sent. (default: 20m0s)",
      "default": "22m"
    },
    "chan-status-sample-interval": {
      "name": "Chan status sample interval",
      "description": "The polling interval between attempts to detect if an active channel has become inactive due to its peer going offline. (default: 1m0s)",
      "default": "2m"
    },

    "height-hint-cache-query-disable": {
      "name": "Height hint cache query disable",
      "description": "Disable queries from the height-hint cache to try to recover channels stuck in the pending close state. Disabling height hint queries may cause longer chain rescans, resulting in a performance hit. Unset this after channels are unstuck so you can get better performance again.",
      "default": true
    },
    "historicalsyncinterval": {
      "name": "Historical sync interval",
      "description": "The polling interval between historical graph sync attempts. Each historical graph sync attempt ensures we reconcile with the remote peer's graph from the genesis block. (default: 1h0m0s)",
      "default": "2h"
    },
    "ignore-historical-gossip-filters": {
      "name": "Ignore historical gossip filters",
      "description": "If true, will not reply with historical data that matches the range specified by a remote peer's gossip_timestamp_filter. Doing so will result in lower memory and bandwidth requirements.",
      "default": true
    },
    "rejectpush": {
      "name": "Reject push",
      "description": "If true, lnd will not accept channel opening requests with non-zero push amounts. This should prevent accidental pushes to merchant nodes.",
      "default": true
    },
    "rejecthtlc": {
      "name": "Reject HTLC",
      "description": "If true, lnd will not forward any HTLCs that are meant as onward payments. This option will still allow lnd to send HTLCs and receive HTLCs but lnd won't be used as a hop.",
      "default": true
    },
    "requireinterceptor": {
      "name": "Require Interceptor",
      "description": "If true, all HTLCs will be held until they are handled by an interceptor",
      "default": true
    },
    "stagger-initial-reconnect": {
      "name": "Stagger initial reconnect",
      "description": "If true, will apply a randomized staggering between 0s and 30s when reconnecting to persistent peers on startup. The first 10 reconnections will be attempted instantly, regardless of the flag's value",
      "default": true
    },

    "max-cltv-expiry": {
      "name": "Max cltv expiry",
      "description": "The maximum number of blocks funds could be locked up for when forwarding payments. (default: 2016)",
      "default": true
    },
    "max-channel-fee-allocation": {
      "name": "Max channel fee allocation",
      "description": "The maximum percentage of total funds that can be allocated to a channel's commitment fee. This only applies for the initiator of the channel. Valid values are within [0.1, 1]. (default: 0.5)",
      "default": 0.9
    },
    "max-commit-fee-rate-anchors": {
      "name": "Max commit fee rate anchors",
      "description": "The maximum fee rate in sat/vbyte that will be used for commitments of channels of the anchors type. Must be large enough to ensure transaction propagation (default: 10)",
      "default": 5
    },
    "dust-threshold": {
      "name": "Dust threshold",
      "description": "A threshold defining the maximum amount of dust a given channel can have after which forwarding and sending dust HTLC's to and from the channel will fail. This amount is expressed in satoshis. (default: 500000)",
      "default": 1000000
    },

    "dry-run-migration": {
      "name": "Dry run migration",
      "description": "If true, lnd will abort committing a migration if it would otherwise have been successful. This leaves the database unmodified, and still compatible with the previously active version of lnd.",
      "default": true
    },
    "enable-upfront-shutdown": {
      "name": "Enable upfront shutdown",
      "description": "If true, option upfront shutdown script will be enabled. If peers that we open channels with support this feature, we will automatically set the script to which cooperative closes should be paid out to on channel open. This offers the partial protection of a channel peer disconnecting from us if cooperative close is attempted with a different script.",
      "default": true
    },
    "accept-keysend": {
      "name": "Accept keysend",
      "description": "If true, spontaneous payments through keysend will be accepted. This is a temporary solution until AMP is implemented which is expected to be soon. This option will then become deprecated in favor of AMP.",
      "default": true
    },
    "keysend-hold-time": {
      "name": "Keysend hold time",
      "description": "If non-zero, keysend payments are accepted but not immediately settled. If the payment isn't settled manually after the specified time, it is canceled automatically. [experimental]",
      "default": true
    },
    "accept-amp": {
      "name": "Accept AMP",
      "description": "If true, spontaneous payments through AMP will be accepted. Payments to AMP invoices will be accepted regardless of this setting.",
      "default": true
    },
    "gc-canceled-invoices-on-startup": {
      "name": "GC canceled invoices on startup",
      "description": "If true, we'll attempt to garbage collect canceled invoices upon start.",
      "default": true
    },
    "gc-canceled-invoices-on-the-fly": {
      "name": "GC canceled invoices on the fly",
      "description": "If true, we'll delete newly canceled invoices on the fly.",
      "default": true
    },
    "allow-circular-route": {
      "name": "Allow circular route",
      "description": "If true, our node will allow htlc forwards that arrive and depart on the same channel.",
      "default": true
    },
    "trickledelay": {
      "name": "Trickle delay",
      "description": "Time in milliseconds between each release of announcements to the network",
      "default": 180000
    },
    "numgraphsyncpeers": {
      "name": "Num graph sync peers",
      "description": "The number of peers that we should receive new graph updates from. This option can be tuned to save bandwidth for light clients or routing nodes. (default: 3)",
      "default": 9
    },
    "prometheus.enable": {
      "name": "prometheus enable",
      "description": "If true, lnd will start the Prometheus exporter. Prometheus flags are  behind a build/compile flag and are not available by default. lnd must be built  with the monitoring tag; `make && make install tags=monitoring` to activate them.",
      "default": true
    },
    "prometheus.listen": {
      "name": "Prometheus listen",
      "description": "Specify the interface to listen on for Prometheus connections.",
      "default": "0.0.0.0:8989"
    },
    "prometheus.perfhistograms": {
      "name": "Prometheus perfhistograms",
      "description": "If true, then we'll export additional information that allows users to plot the processing latency, and total time spent across each RPC calls+service. This generates additional memory load for the Prometheus server, and will end up using more disk space over time.",
      "default": true
    },
    "alias": {
      "name": "Alias",
      "description": "The alias your node will use, which can be up to 32 UTF-8 characters in length.",
      "default": "My Lightning ☇"
    },
    "color": {
      "name": "Color",
      "description": "The color of the node in hex format, used to customize node appearance in intelligence services.",
      "default": "#3399FF"
    }
  },

  "debug": {
    "section": "Debugging & Testing",
    "description": "Features that help developers who are testing changes to Bitcoin Core.",
    "uacomment": {
      "name": "User Agent Comment",
      "description": "Append comment to the user agent string.",
      "default": ""
    },
    "addrmantest": {
      "name": "Address Manager Test",
      "description": "Allows you to test address relay on localhost.",
      "default": 0
    },
    "capturemessages": {
      "name": "Capture Messages",
      "description": "Capture all P2P messages to disk.",
      "default": 0
    },
    "checkblocks": {
      "name": "Check Blocks",
      "description": "How many recent blocks to check at startup.",
      "default": 6,
      "min": 0
    },
    "checklevel": {
      "name": "Check Block Level",
      "description": "How thorough the block verification of -checkblocks is (0-4).",
      "default": 3,
      "min": 0,
      "max": 4
    },
    "checkaddrman": {
      "name": "Check Address Manager",
      "description": "Run addrman consistency checks every <n> operations.",
      "default": 0,
      "min": 0
    },
    "checkmempool": {
      "name": "Check Mempool",
      "description": "Run mempool consistency checks every <n> transactions.",
      "default": 0,
      "min": 0
    },
    "checkpoints": {
      "name": "Enable Checkpoints",
      "description": "Disable expensive verification for known chain history.",
      "default": 1
    },
    "dbcrashratio": {
      "name": "DB Crash Ratio",
      "description": "Randomly crash while writing data at a given rate between 0 and 1.",
      "default": 0,
      "min": 0,
      "max": 1
    },
    "fastprune": {
      "name": "Fast Prune",
      "description": "Use smaller block files and lower minimum prune height for testing purposes.",
      "default": 0
    },
    "stopafterblockimport": {
      "name": "Stop After Block Import",
      "description": "Stop running after importing blocks from disk.",
      "default": 0
    },
    "stopatheight": {
      "name": "Stop At Height",
      "description": "Stop running after reaching the given height in the main chain.",
      "default": 0
    },
    "testactivationheight": {
      "name": "Test Activation Height",
      "description": "Set the activation height of of 'name' (segwit, bip34, dersig, cltv, csv) via 'name@height' (regtest-only).",
      "default": 0
    },
    "limitancestorcount": {
      "name": "Limit Transaction Ancestor Count",
      "description": "Do not accept transactions if number of in-mempool ancestors is <n> or more.",
      "default": 25,
      "min": 0
    },
    "limitancestorsize": {
      "name": "Limit Transaction Ancestor Size",
      "description": "Do not accept transactions whose size with all in-mempool ancestors exceeds <n> kilobytes.",
      "default": 101,
      "min": 0
    },
    "limitdescendantcount": {
      "name": "Limit Transaction Descendant Count",
      "description": "Do not accept transactions if any ancestor would have <n> or more in-mempool descendants.",
      "default": 25,
      "min": 0
    },
    "limitdescendantsize": {
      "name": "Limit Transaction Descendant Size",
      "description": "Do not accept transactions whose size with all in-mempool descendants exceeds <n> kilobytes.",
      "default": 101,
      "min": 0
    },
    "debug": {
      "name": "Debug Logging",
      "description": {
        "0": "Disable debug logging.",
        "1": "Enable debug logging for all categories.",
        "addrman": "Enable address manager logging.",
        "alert": "Enable alert logging",
        "bench": "Enable benchmark logging",
        "cmpctblock": "Enable compact block logging",
        "coindb": "Enable coin database logging",
        "walletdb": "Enable wallet database logging",
        "http": "Enable HTTP logging",
        "leveldb": "Enable leveldb logging",
        "libevent": "Enable libevent logging",
        "lock": "Enable lock logging",
        "mempool": "Enable mempool logging",
        "mempoolrej": "Enable mempool rejection logging",
        "net": "Enable network logging",
        "proxy": "Enable proxy logging",
        "prune": "Enable pruning logging",
        "rand": "Enable randomness logging",
        "reindex": "Enable reindexing logging",
        "rpc": "Enable RPC logging",
        "selectcoins": "Enable coin selection logging",
        "tor": "Enable Tor logging",
        "zmq": "Enable ZeroMQ logging"
      },
      "default": "0",
      "values": [
        "Disable [0]",
        "Enable All [1]",
        "Address Manager [addrman]",
        "Alerts [alert]",
        "Benchmarking [bench]",
        "Compact Blocks [cmpctblock]",
        "CoinDB [coindb]",
        "Database [db]",
        "HTTP [http]",
        "LevelDB [leveldb]",
        "LibEvent [libevent]",
        "Locking [lock]",
        "Mempool [mempool]",
        "Mempool Rejection [mempoolrej]",
        "Networking [net]",
        "Proxy [proxy]",
        "Pruning [prune]",
        "Random [rand]",
        "Reinding [reindex]",
        "RPC [rpc]",
        "Coin Selection [selectcoins]",
        "Tor [tor]",
        "ZeroMQ [zmq]"
      ]
    },
    "debugexclude": {
      "name": "Exclude Debug Logging",
      "description": {
        "0": "Don't exclude any logging.",
        "addrman": "Exclude address manager logging.",
        "alert": "Exclude alert logging",
        "bench": "Exclude benchmark logging",
        "cmpctblock": "Exclude compact block logging",
        "coindb": "Exclude coin database logging",
        "db": "Exclude database logging",
        "http": "Exclude HTTP logging",
        "leveldb": "Exclude leveldb logging",
        "libevent": "Exclude libevent logging",
        "lock": "Exclude lock logging",
        "mempool": "Exclude mempool logging",
        "mempoolrej": "Exclude mempool rejection logging",
        "net": "Exclude network logging",
        "proxy": "Exclude proxy logging",
        "prune": "Exclude pruning logging",
        "rand": "Exclude randomness logging",
        "reindex": "Exclude reindexing logging",
        "rpc": "Exclude RPC logging",
        "selectcoins": "Exclude coin selection logging",
        "tor": "Exclude Tor logging",
        "zmq": "Exclude ZeroMQ logging"
      },
      "default": "0",
      "values": [
        "No Exclusions [0]",
        "Address Manager [addrman]",
        "Alerts [alert]",
        "Benchmarking [bench]",
        "Compact Blocks [cmpctblock]",
        "CoinDB [coindb]",
        "Database [db]",
        "HTTP [http]",
        "LevelDB [leveldb]",
        "LibEvent [libevent]",
        "Locking [lock]",
        "Mempool [mempool]",
        "Mempool Rejection [mempoolrej]",
        "Networking [net]",
        "Proxy [proxy]",
        "Pruning [prune]",
        "Random [rand]",
        "Reinding [reindex]",
        "RPC [rpc]",
        "Coin Selection [selectcoins]",
        "Tor [tor]",
        "ZeroMQ [zmq]"
      ]
    },
    "debuglogfile": {
      "name": "Debug Log File",
      "description": "Location of the debug log",
      "default": "$BASE/debug.log"
    },
    "logips": {
      "name": "Log IP Addresses",
      "description": "Log IP Addresses in debug output.",
      "default": 0
    },
    "logsourcelocations": {
      "name": "Log Source Locations",
      "description": "Prepend debug output with name of the originating source location (source file, line number and function name).",
      "default": 0
    },
    "logthreadnames": {
      "name": "Log Thread Names",
      "description": "Prepend debug output with name of the originating thread (only available on platforms supporting thread_local).",
      "default": 0
    },
    "logtimestamps": {
      "name": "Log Timestamps",
      "description": "Log timestamps in debug output.",
      "default": 1
    },
    "logtimemicros": {
      "name": "Log Precise Timestamps",
      "description": "Log timestamps with microsecond precision.",
      "default": 0
    },
    "mocktime": {
      "name": "Mock Timestamps",
      "description": "Replace actual time with <n> seconds since epoch.",
      "default": 0
    },
    "maxsigcachesize": {
      "name": "Max Signature Cache Size",
      "description": "Limit size of signature cache to <n> MiB.",
      "default": 32,
      "min": 1
    },
    "maxtipage": {
      "name": "Max Age of Chain Tip",
      "description": "Maximum tip age in seconds to consider node in initial block download.",
      "default": 86400,
      "min": 0
    },
    "maxtxfee": {
      "name": "Max Transaction Fee",
      "description": "Maximum total fees (in BTC) to use in a single wallet transaction or raw transaction; setting this too low may abort large transactions.",
      "default": 0.1,
      "min": 0
    },
    "printtoconsole": {
      "name": "Output to Console",
      "description": "Send trace/debug info to console instead of debug.log.",
      "default": 0
    },
    "printpriority": {
      "name": "Print Priority",
      "description": "Log transaction fee per kB when mining blocks.",
      "default": 0
    },
    "promiscuousmempoolflags": {
      "name": "Script Verification Flags",
      "description": "Integer representing the script verification flags to enable (all ORed together) - flags can be found in interpreter.h.",
      "default": ""
    },
    "shrinkdebugfile": {
      "name": "Shrink Debug Log File",
      "description": "Shrink debug.log file on client startup.",
      "default": 1
    }
  },
  "relay": {
    "section": "Transaction Relay",
    "description": "Fine tune settings for what transactions your node will relay to peers.",
    "acceptnonstdtxn": {
      "name": "Accept Non-Standard Transactions",
      "description": "Relay and mine non-standard transactions (testnet/regtest only.)",
      "default": 0
    },
    "incrementalrelayfee": {
      "name": "Incremental Relay Fee",
      "description": "Fee rate (in BTC/kB) used to define cost of relay, used for mempool limiting and BIP 125 replacement.",
      "default": 0.00001,
      "min": 0
    },
    "dustrelayfee": {
      "name": "Dust Relay Fee",
      "description": "Fee rate (in BTC/kB) used to defined dust, the value of an output such that it will cost about 1/3 of its value in fees at this fee rate to spend it.",
      "default": 0.00001,
      "min": 0
    },
    "bytespersigop": {
      "name": "Bytes Per Signature Operation",
      "description": "Equivalent bytes per sigop in transactions for relay and mining.",
      "default": 20,
      "min": 1
    },
    "datacarrier": {
      "name": "Relay OP_RETURN Transactions",
      "description": "Relay transactions with OP_RETURN outputs.",
      "default": 1
    },
    "datacarriersize": {
      "name": "Max OP_RETURN Size",
      "description": "Maximum size of data in OP_RETURN outputs we relay and mine.",
      "default": 83,
      "min": 1
    },
    "permitbaremultisig": {
      "name": "Permit Bare Multisig",
      "description": "Relay non-P2SH multisig transactions.",
      "default": 1
    },
    "minrelaytxfee": {
      "name": "Min Transaction Relay Fee",
      "description": "Fee rates (in BTC/kB) smaller than this are considered zero fee for relaying, mining and transaction creation.",
      "default": 0.00001,
      "min": 0
    },
    "whitelistrelay": {
      "name": "Whitelist Relay",
      "description": "Accept relayed transactions received from whitelisted peers even when not relaying transactions.",
      "default": 1
    }
  },
  "network": {
    "section": "Networking",
    "description": "Options for how your node interacts with other peers on the network.",
    "addnode": {
      "name": "Connect to Peer",
      "description": "Add a node IP address to connect to and attempt to keep the connection open. This option can be set multiple times.",
      "default": ""
    },
    "asmap": {
      "name": "ASN Mapping",
      "description": "Specify asn mapping used for bucketing of the peers. Relative paths will be prefixed by the net-specific datadir location.",
      "default": "$BASE/ip_asn.map"
    },
    "bantime": {
      "name": "Peer Ban Time",
      "description": "Number of seconds to keep misbehaving peers from reconnecting.",
      "default": 86400,
      "min": 1
    },
    "bind": {
      "name": "Bind to IP Address",
      "description": "Bind to given address and always listen on it. (default: 0.0.0.0). Use [host]:port notation for IPv6. Append =onion to tag any incoming connections to that address and port as incoming Tor connections",
      "default": ""
    },
    "cjdnsreachable": {
      "name": "CJDNS Reachable",
      "description": "If set, then this host is configured for CJDNS (connecting to fc00::/8 addresses would lead us to the CJDNS network)",
      "default": 0
    },
    "connect": {
      "name": "Only Connect to Peer",
      "description": "Connect only to the specified node(s); can be set multiple times. Set to 0 to disable automatic connections.",
      "default": ""
    },
    "discover": {
      "name": "Discover IP Address",
      "description": "Discover own IP addresses. If disabled, should be used with -externalip or -proxy.",
      "default": 1
    },
    "dns": {
      "name": "Allow DNS Lookups",
      "description": "Allow DNS lookups for -addnode, -seednode and -connect values.",
      "default": 1
    },
    "dnsseed": {
      "name": "Use DNS Seed",
      "description": "Query for peer addresses via DNS lookup, if low on addresses.",
      "default": 1
    },
    "externalip": {
      "name": "External IP Address",
      "description": "Specify your own public IP address.",
      "default": ""
    },
    "fixedseeds": {
      "name": "Use Fixed Seeds",
      "description": "Allow fixed seeds if DNS seeds don't provide peers.",
      "default": 1
    },
    "forcednsseed": {
      "name": "Force DNS Seed",
      "description": "Always query for peer addresses via DNS lookup.",
      "default": 0
    },
    "i2pacceptincoming": {
      "name": "Accept Incoming I2P Connections",
      "description": "If set and -i2psam is also set then incoming I2P connections are accepted via the SAM proxy. If this is not set but -i2psam is set then only outgoing connections will be made to the I2P network. Ignored if -i2psam is not set. Listening for incoming I2P connections is done through the SAM proxy, not by binding to a local address and port.",
      "default": 1
    },
    "i2psam": {
      "name": "I2P SAM Proxy",
      "description": "I2P SAM proxy <ip:port> to reach I2P peers and accept I2P connections."
    },
    "listen": {
      "name": "Listen for Incoming Connections",
      "description": "Accept incoming connections from peers.",
      "default": 1
    },
    "listenonion": {
      "name": "Tor Hidden Service",
      "description": "Automatically create Tor hidden service.",
      "default": 1
    },
    "maxconnections": {
      "name": "Max Peer Connections",
      "description": "Maintain at most N connections to peers.",
      "default": 125,
      "min": 0,
      "max": 250
    },
    "maxreceivebuffer": {
      "name": "Max Receive Buffer",
      "description": "Maximum per-connection receive buffer (KiB).",
      "default": 5000,
      "min": 1000
    },
    "maxsendbuffer": {
      "name": "Max Send Buffer",
      "description": "Maximum per-connection send buffer (KiB).",
      "default": 1000,
      "min": 100
    },
    "maxtimeadjustment": {
      "name": "Max Time Adjustment",
      "description": "Maximum allowed median peer time offset adjustment in seconds. Local perspective of time may be influenced by peers forward or backward by this amount.",
      "default": 4200,
      "min": 0
    },
    "natpmp": {
      "name": "NAT Port Mapping Protocol",
      "description": "Use NAT-PMP to map the listening port.",
      "default": 0
    },
    "networkactive": {
      "name": "Network Active",
      "description": "Enable all P2P network activity.",
      "default": 1
    },
    "onion": {
      "name": "Tor Proxy",
      "description": "Use separate SOCKS5 proxy <ip:port> to reach peers via Tor hidden services.",
      "default": ""
    },
    "onlynet": {
      "name": "Only Use Specific Network",
      "description": {
        "any": "Use every available network",
        "ipv4": "Only connect to peers via IPV4",
        "ipv6": "Only connect to peers via IPV6.",
        "onion": "Only connect to peers via Tor."
      },
      "default": "any",
      "values": [
        "Any [any]",
        "IPV4 [ipv4]",
        "IPV6 [ipv6]",
        "Tor [onion]"
      ]
    },
    "peerblockfilters": {
      "name": "Permit Peer Block Filters",
      "description": "Serve compact block filters to peers per BIP 157. NOTE: enabling this will force blockfilterindex on",
      "default": 0
    },
    "peerbloomfilters": {
      "name": "Permit Peer Bloom Filters",
      "description": "Support filtering of blocks and transactions with bloom filters.",
      "default": 0
    },
    "peertimeout": {
      "name": "Peer Timeout",
      "description": "Specify p2p connection timeout in seconds. The amount of time a peer may be inactive before the connection to it is dropped.",
      "default": 60,
      "min": 1
    },
    "port": {
      "name": "Listen Port",
      "description": "Listen for incoming connections on non-default port.",
      "default": ""
    },
    "proxy": {
      "name": "Proxy Connection",
      "description": "Connect through <ip:port> SOCKS5 proxy.",
      "default": ""
    },
    "proxyrandomize": {
      "name": "Randomize Proxy",
      "description": "Randomize credentials for every proxy connection. This enables Tor stream isolation.",
      "default": 1
    },
    "seednode": {
      "name": "Seed Node",
      "description": "Connect to a node (IP address) to retrieve peer addresses, then disconnect.",
      "default": ""
    },
    "timeout": {
      "name": "Connection Timeout",
      "description": "Initial peer connection timeout in milliseconds.",
      "default": 5000,
      "min": 1
    },
    "torcontrol": {
      "name": "Tor Control",
      "description": "Tor control <ip:port> to use if onion listening enabled.",
      "default": "127.0.0.1:9051"
    },
    "torpassword": {
      "name": "Tor Control Password",
      "description": "Tor control port password.",
      "default": ""
    },
    "upnp": {
      "name": "Universal Plug 'n Play",
      "description": "Use UPnP to map the listening port.",
      "default": 0
    },
    "whitebind": {
      "name": "Whitelist Bound IP Address",
      "description": "Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6. Use [permissions]address for permissions. Allowed permissions are bloomfilter, noban, forcerelay, relay, and mempool. Specify multiple permissions separated by commas (default: noban,mempool,relay). Can be specified multiple times.",
      "default": ""
    },
    "whitelist": {
      "name": "Whitelist Peer",
      "description": "Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or CIDR notated network (e.g. 1.2.3.0/24). Use [permissions]address for permissions. Uses same permissions as Whitelist Bound IP Address. Can be specified multiple times. Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool. Useful for a gateway node.",
      "default": ""
    },
    "maxuploadtarget": {
      "name": "Max Upload Target",
      "description": "Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit.",
      "default": 0,
      "min": 0
    }
  },
  "mining": {
    "section": "Mining",
    "description": "Configure attributes of blocks that can be mined by this node.",
    "blockmaxweight": {
      "name": "Max Block Weight",
      "description": "Set maximum BIP141 block weight.",
      "default": 3000000
    },
    "blockmintxfee": {
      "name": "Block Min Transaction Fee",
      "description": "Set lowest fee rate (in BTC/kB) for transactions to be included in block creation.",
      "default": 0.00001,
      "min": 0
    },
    "blockversion": {
      "name": "Block Version",
      "description": "Override block version to test forking scenarios.",
      "default": ""
    }
  },
  "rpc": {
    "section": "RPC API",
    "description": "Configure security and performance options for accessing the node's RPC interface.",
    "deprecatedrpc": {
      "name": "Enable Deprecated RPC Commands",
      "description": {
        "accounts": "Enable Accounts RPC",
        "addwitnessaddress": "Enable Add Witness Address RPC",
        "signrawtransaction": "Enable Sign Raw Transaction RPC",
        "validateaddress": "Enable Validate Address RPC"
      },
      "default": [],
      "values": [
        "Accounts [accounts]",
        "Add Witness Address [addwitnessaddress]",
        "Sign Raw Transaction [signrawtransaction]",
        "Validate Address [validateaddress]"
      ]
    },
    "server": {
      "name": "Enable RPC Server",
      "description": "Accept command line and JSON-RPC commands.",
      "default": 0
    },
    "rest": {
      "name": "Enable REST API",
      "description": "Accept public REST requests.",
      "default": 0
    },
    "rpcbind": {
      "name": "Bind RPC Address",
      "description": "Bind to given address to listen for JSON-RPC connections. This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times. (default: 127.0.0.1 and ::1 i.e., localhost)",
      "default": ""
    },
    "rpccookiefile": {
      "name": "RPC Cookie Directory",
      "description": "Location of the RPC auth cookie",
      "default": ".cookie"
    },
    "rpcauth": {
      "name": "RPC Auth",
      "description": "Username and hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. RPC clients connect using rpcuser=<USERNAME>/rpcpassword=<PASSWORD> arguments. You can generate this value at https://jlopp.github.io/bitcoin-core-rpc-auth-generator/. This option can be specified multiple times.",
      "default": ""
    },
    "rpcport": {
      "name": "RPC Port",
      "description": "Listen for JSON-RPC connections on this port",
      "default": 8332
    },
    "rpcallowip": {
      "name": "RPC Allow IP Address",
      "description": "Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times.",
      "default": ""
    },
    "rpcwhitelistdefault": {
      "name": "RPC Whitelist Default",
      "description": "Sets default behavior for rpc whitelisting. Unless rpcwhitelistdefault is set to 0, if any -rpcwhitelist is set, the rpc server acts as if all rpc users are subject to empty-unless-otherwise-specified whitelists. If rpcwhitelistdefault is set to 1 and no -rpcwhitelist is set, rpc server acts as if all rpc users are subject to empty whitelists.",
      "default": 0
    },
    "rpcwhitelist": {
      "name": "RPC Whitelist",
      "description": "Set a whitelist to filter incoming RPC calls for a specific user. The field <whitelist> comes in the format: <USERNAME>:<rpc 1>,<rpc 2>,...,<rpc n>. If multiple whitelists are set for a given user, they are set-intersected.",
      "default": ""
    },
    "rpcthreads": {
      "name": "RPC Threads",
      "description": "Set the number of threads to service RPC calls",
      "default": 4,
      "min": 1
    },
    "rpcworkqueue": {
      "name": "RPC Work Queue Size",
      "description": "Set the depth of the work queue to service RPC calls",
      "default": 16,
      "min": 1
    },
    "rpcserialversion": {
      "name": "RPC Serialization",
      "description": {
        "0": "Return raw transaction or block hex with non-SegWit serialization.",
        "1": "Return raw transaction or block hex with SegWit serialization."
      },
      "default": "1",
      "values": [
        "Non-SegWit [0]",
        "SegWit [1]"
      ]
    },
    "rpcservertimeout": {
      "name": "RPC Timeout",
      "description": "Number of seconds after which an uncompleted RPC call will time out",
      "default": 30,
      "min": 1
    }
  },
  "wallet": {
    "section": "Wallet",
    "description": "Configure behavior of the node's wallet.",
    "addresstype": {
      "name": "Address Type",
      "description": {
        "legacy": "Legacy",
        "p2sh-segwit": "P2SH Wrapped SegWit",
        "bech32": "Bech32"
      },
      "default": "p2sh-segwit",
      "values": [
        "Legacy [legacy]",
        "P2SH Wrapped SegWit [p2sh-segwit]",
        "Bech32 [bech32]"
      ]
    },
    "avoidpartialspends": {
      "name": "Avoid Partial Spends",
      "description": "Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Improves privacy at expense of higher transaction fees.",
      "default": 0
    },
    "changetype": {
      "name": "Change Address Type",
      "description": {
        "legacy": "Legacy",
        "p2sh-segwit": "P2SH Wrapped SegWit",
        "bech32": "Bech32"
      },
      "default": "p2sh-segwit",
      "values": [
        "Legacy [legacy]",
        "P2SH Wrapped SegWit [p2sh-segwit]",
        "Bech32 [bech32]"
      ]
    },
    "consolidatefeerate": {
      "name": "Consolidate Fee Rate",
      "description": "The maximum feerate (in BTC/kvB) at which transaction building may use more inputs than strictly necessary so that the wallet's UTXO pool can be reduced",
      "default": 0.0001,
      "min": 0.00001
    },
    "disablewallet": {
      "name": "Disable Wallet",
      "description": "Do not load the wallet and disable wallet RPC calls.",
      "default": 0
    },
    "keypool": {
      "name": "Key Pool Size",
      "description": "Set key pool size to <n>. Recommended to use a large number for high volume non-HD wallets.",
      "default": 1000,
      "min": 10
    },
    "fallbackfee": {
      "name": "Fallback Transaction Fee",
      "description": "A fee rate (in BTC/kB) that will be used when fee estimation has insufficient data",
      "default": 0.0002,
      "min": 0
    },
    "discardfee": {
      "name": "Discard Change Fee",
      "description": "The fee rate (in BTC/kB) that indicates your tolerance for discarding change by adding it to the fee",
      "default": 0.0001,
      "min": 0
    },
    "maxapsfee": {
      "name": "Max Avoid Partial Spend Fee",
      "description": "Spend up to this amount in additional (absolute) fees (in BTC) if it allows the use of partial spend avoidance (default: 0.00)",
      "default": 0.00,
      "min": 0
    },
    "mintxfee": {
      "name": "Min Transaction Fee",
      "description": "Fee rates (in BTC/kB) smaller than this are considered zero fee for transaction creation",
      "default": 0.00001,
      "min": 0
    },
    "paytxfee": {
      "name": "Pay Transaction Fee",
      "description": "Fee rate (in BTC/kB) to add to transactions you send. Not recommended to set!",
      "default": 0
    },
    "signer": {
      "name": "Signer Command",
      "description": "External signing tool, see doc/external-signer.md"
    },
    "spendzeroconfchange": {
      "name": "Spend Unconfirmed Change",
      "description": "Spend unconfirmed change when sending transactions.",
      "default": 1
    },
    "rootcertificates": {
      "name": "Root Certificate file",
      "description": "Specify a custom root certificate to trust for payment requests. Delete value to disable trusting root certificates.",
      "default": "-system-"
    },
    "txconfirmtarget": {
      "name": "Transaction Fee Confirmation Target",
      "description": "If paytxfee is not set, include enough fee so that transactions should confirm within <n> blocks",
      "default": 6,
      "min": 2,
      "max": 25
    },
    "unsafesqlitesync": {
      "name": "Unsafe SQL Lite Sync",
      "description": "Disable waiting for the database to sync to disk. This is unsafe and can cause data loss and corruption. This option is only used by tests to improve their performance.",
      "default": 0
    },
    "walletrbf": {
      "name": "Enable Replace By Fee Transactions",
      "description": "Send transactions with full-RBF opt-in enabled.",
      "default": 1
    },
    "wallet": {
      "name": "Wallet Path",
      "description": "Specify wallet database path. Can be specified multiple times to load multiple wallets. Path is interpreted relative to <walletdir> if it is not absolute and will be created if it does not exist.",
      "default": ""
    },
    "walletdir": {
      "name": "Wallet Data Storage Location",
      "description": "Specify a non-default location to store wallet data.",
      "default": "$BASE/wallets"
    },
    "walletbroadcast": {
      "name": "Broadcast Transactions",
      "description": "Broadcast transactions created by the wallet.",
      "default": 1
    },
    "walletnotify": {
      "name": "Wallet Notification",
      "description": "Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)",
      "default": ""
    },
    "dblogsize": {
      "name": "DB Log Size",
      "description": "Flush wallet database activity from memory to disk log every <n> megabytes",
      "default": 100
    },
    "flushwallet": {
      "name": "Flush Wallet Automatically",
      "description": "Run a thread to flush wallet periodically.",
      "default": 1
    },
    "privdb": {
      "name": "Private DB",
      "description": "Set the DB_PRIVATE flag in the wallet db environment.",
      "default": 1
    },
    "walletrejectlongchains": {
      "name": "Reject Long Transaction Chains",
      "description": "Wallet will not create transactions that violate mempool chain limits.",
      "default": 1
    }
  },
  "sweeper": {
    "section": "Sweeper",
    "description": "",
    "batchwindowduration": {
      "name": "Batch window duration (in seconds)",
      "description": "Duration of the sweep batch window. The sweep is held back during the batch window to allow more inputs to be added and thereby lower the fee per input.",
      "default": ""
    }
  }
}
